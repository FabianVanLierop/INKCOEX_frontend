@page "/sets/{id:int}"
@using INKCOEX_frontend.Model.Cards
@inject HttpClient Client

<h3 class="mb-3">Collection Status</h3>

<div class="d-flex justify-content-between align-items-center mb-3">
    <div class="text-muted small">You must be logged in to track your collection</div>
    <div>
        <button class="btn btn-sm btn-outline-success me-2" @onclick="CheckAll">Check All</button>
        <button class="btn btn-sm btn-outline-secondary" @onclick="UncheckAll">Check None</button>
    </div>
</div>

<div class="row row-cols-2 row-cols-sm-3 row-cols-md-4 row-cols-lg-6 g-3">
    @if(_cards == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        @foreach (var card in _cards)
        {
            <div class="col">
                <div class="card border-0 shadow-sm h-100 position-relative"
                     style="cursor:pointer; @(card.Owned ? "" : "filter:grayscale(100%) brightness(70%); opacity:0.6;")"
                     @onclick="() => Toggle(card)">

                    <div class="card-body p-2 text-center small">
                        <div class="fw-bold">#@card.Number - @card.Name</div>
                    </div>
                    <img src="data:image/png;base64,@card.ImageData" class="card-img-top" alt="@card.Name"/>

                    @if (card.Owned)
                    {
                        <div class="check-overlay">
                            <i class="bi bi-check-circle-fill text-success fs-4"></i>
                        </div>
                    }
                </div>
            </div>
        }
    }
</div>

@code {
    [Parameter] 
    public int Id { get; set; }

    private List<Card>? _cards;

    protected override async Task OnInitializedAsync()
    {
        _cards = await Client.GetFromJsonAsync<List<Card>>($"collections/sets/{Id}/cards");
    }

    private void Toggle(Card card) => card.Owned = !card.Owned;
    private void CheckAll() => _cards?.ForEach(c => c.Owned = true);
    private void UncheckAll() => _cards?.ForEach(c => c.Owned = false);
}
